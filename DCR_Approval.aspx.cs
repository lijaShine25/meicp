using System;
using System.Collections.Generic;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Linq;
using Newtonsoft.Json;
using Elmah;
using System.IO;
using System.Web.UI.HtmlControls;
using System.Text;
using NPoco;
using OfficeOpenXml.FormulaParsing.Excel.Functions.Math;
using DataBinder = System.Web.UI.DataBinder;
using System.Windows.Forms;

public partial class DCR_Approval : System.Web.UI.Page
{
    public enum MessageType { Success, Error, Info, Warning };
    List<Class_Employees> userInfo = null;
    protected void Page_Load(object sender, EventArgs e)
    {
        userInfo = (List<Class_Employees>)Session["UserInfo"];
        if (userInfo == null)
        {
            Response.Redirect("~/LoginPage.aspx");
        }
        int em = GetAccessUsers();
        if (userInfo[0].isAdmin != "Y" && em <= 0)
        {
            Response.Redirect("~/AccessDenied.aspx");
        }

        if (!Page.IsPostBack)
        {

            LoadParts();
            LoadGridData();

            if (userInfo[0].isAdmin == "Y" && em <= 0)
            {
                btnSubmit.Enabled = false;
            }
            else if (em > 0)
            {
                btnSubmit.Enabled = true;
            }
            if (userInfo[0].isAdmin == "Y")
                btnviewall.Enabled = true;
            else btnviewall.Enabled = false;
        }
    }
    protected int GetAccessUsers()
    {
        string sql = "select EmployeeSlNo from Employees where EmployeeSlNo in(select distinct approvedby from parts where  Obsolete='N'  and approvedby<>0 and approvedby is not null)  and EmployeeSlNo=@0";

        Database db = new Database("connString");
        int emp = db.ExecuteScalar<int>(sql, userInfo[0].EmployeeSlNo);
        return emp;
    }

    protected void ShowMessage(string Message, MessageType type)
    {
        ScriptManager.RegisterStartupScript(this, this.GetType(), System.Guid.NewGuid().ToString(), "ShowMessage('" + Message + "','" + type + "');", true);
    }

    protected void btnSubmit_Click(object sender, EventArgs e)
    {
        SaveData();
        ddlpart_slno.SelectedIndex = 0;
        LoadGridData();
    }
    protected void btnClear_Click(object sender, EventArgs e)
    {
        ClearData();

    }
    protected void PrepareForMail(List<string> tomails, List<string> ccmails, string mailFor,string part,string dcrnumber,string opn,
        string reqbyname,string changes, string reason)
    {
        string sql = "select enable_trigger from settings";
        using (Database db = new Database("connString"))
        {
            var x = db.ExecuteScalar<string>(sql);
            if (x == null)
            {
                return;
            }
            else if (x == "N")
            {
                return;
            }
        }
        string changearea = "Control Plan";
        string subject = string.Empty;
        string msg = string.Empty;
        msg = "The below DCR is approved  and is pending for your Action.";
        subject = "DCR Approved for " + changearea + "- (Part: " + part + ")";
        
        string styl = "<style>table{max-width:100%;background-color:transparent;font-size:14px}th{text-align:left}.table{width:100%;margin-bottom:20px}.table>tbody>tr>td,.table>tbody>tr>th,.table>tfoot>tr>td,.table>tfoot>tr>th,.table>thead>tr>td,.table>thead>tr>th{padding:8px;line-height:1.428571429;vertical-align:top;border-top:1px solid #ddd}.table>thead>tr>th{vertical-align:bottom;border-bottom:2px solid #ddd}.table>tbody+tbody{border-top:2px solid #ddd}.table .table{background-color:#fff}.table-striped>tbody>tr:nth-child(odd)>td,.table-striped>tbody>tr:nth-child(odd)>th{background-color:#f9f9f9}body{font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;line-height:1.428571429;color:#333;background-color:#fff}h2{font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-weight:500;line-height:1.1;color:inherit;text-align:center}</style>";

        string bodycnt = "<center><b><label style='background-color:#0198FF; color:White;font-family:Calibri;font-size:medium;'>&nbsp;THIS IS AN AUTOGENERATED MAIL. DO NOT REPLY TO THIS!! &nbsp;</label></b></center>" +
            "<body style='font-family:Calibri;font-size:medium;'>Hi, <br/><br/>" + msg +
            "<table class='table table-striped'>" +
             "<tr><th>DCR Number</th><td>" + dcrnumber + "</td></tr>" +
            "<tr><th>Part No</th><td>" + part + "</td></tr>" +
            "<tr><th>Operation</Th><td>" + opn + "</td></tr>" +
            "<tr><th>Request By</th><td>" + reqbyname + "</td></tr>" +
            "<tr><th>Changes Required</th><td>" + changes + "</td></tr>" +
            "<tr><th>Reason for Change</th><td>" + reason + "</td></tr>";




        string mailBody = "<html><head>" + styl + "</head><body>" + bodycnt + "</body></html>";

        List<string> newToId = tomails.Distinct().ToList();
        List<string> newCcId = ccmails.Distinct().ToList();


        // send mail
        mail ml = new mail();
        ml.SendMail(toMailId: newToId, mailSubject: subject, bodyText: mailBody, ccMailId: newCcId);

    }
    void SaveData()
    {
        try
        {
            foreach (GridViewRow row in grdData.Rows)
            {
                // Find the checkbox and label controls in the current row
                System.Web.UI.WebControls.CheckBox chkSelect = row.FindControl("chkSelect") as System.Web.UI.WebControls.CheckBox;
                System.Web.UI.WebControls.Label dcr_slno = row.FindControl("dcrSlNo") as System.Web.UI.WebControls.Label;
                System.Web.UI.WebControls.Label reqbyslno = row.FindControl("reqbyslno") as System.Web.UI.WebControls.Label;
                string part = row.Cells[0].Text; 
                string operation = row.Cells[1].Text;
                string dcrnumber = row.Cells[3].Text;
                string changes = row.Cells[9].Text; 
                string reason = row.Cells[10].Text;
                string reqbyname = row.Cells[7].Text;

                if (chkSelect != null && (dcr_slno != null && dcr_slno.Text != "0") && chkSelect.Checked)
                {
                    string slnoValue = dcr_slno.Text;
                    string qry = "update DCR  set Submit_Status='A', DCR_Approved_DateTime=@0 where dcr_slno=@1";
                    Database db = new Database("connString");
                    {
                        db.Execute(qry,DateTime.Now, Convert.ToInt32(slnoValue));

                    }
                }

                using (Database db = new Database("connString"))
                {
                    List<string> tomails = null;
                    string sqltoadmin = @"select emailid from  employees where del_status='N' and isAdmin='Y'";
                    List<Class_Employees> lstempl = db.Fetch<Class_Employees>(sqltoadmin);
                    string sqlccreq = @"select emailid from  employees where del_status='N' and EmployeeSlNo="+Convert.ToInt32(reqbyslno.Text);
                    List<Class_Employees> lstemplcc = db.Fetch<Class_Employees>(sqlccreq);
                    if (lstempl.Count > 0)
                    {
                        foreach (Class_Employees c1 in lstempl)
                        {
                            tomails.Add(c1.EmailId);
                        }
                    }
                    else
                    {
                        tomails.Add(userInfo[0].EmailId);
                    }

                    List<string> ccmails = null;
                    if (lstemplcc.Count > 0)
                    {
                        foreach (Class_Employees c1 in lstemplcc)
                        {
                            ccmails.Add(c1.EmailId);
                        }
                    }
                   
                   
                    ccmails.Add(userInfo[0].EmailId);
                    string mailFor = "approved";
                    PrepareForMail(tomails, ccmails, mailFor, part, dcrnumber, operation, reqbyname, changes, reason);
                }
            }
            ShowMessage("Data Updated Successfully!!", MessageType.Success);
        }
        catch (Exception e)
        {
            ShowMessage(e.InnerException.ToString(), MessageType.Info);
        }
    }
    protected void btnFilder_Click(object sender, EventArgs e)
    {
        LoadGridData();
    }
    protected void btnviewall_Click(object sender, EventArgs e)
    {
        Response.Redirect("DCR_Approval_Admin.aspx");
    }

    void ClearData()
    {
        ddlpart_slno.SelectedIndex = 0;
        LoadGridData();
    }
    void LoadGridData()
    {
        using (Crud_dcr crud = new Crud_dcr())
        {
            List<Class_DCR> lst = crud.PendingDCRApproval(userInfo[0].EmployeeSlNo);
            List<Class_DCR> lst2 = lst;
            if (ddlpart_slno.SelectedIndex > 0)
            {
                lst2.Clear();
                lst2 = lst.Where(x => x.part_slno == Convert.ToInt16(ddlpart_slno.SelectedValue)).ToList();
            }
            if (lst2.Count > 0)
            {
                grdData.DataSource = lst;
                grdData.DataBind();
            }
            else
            {
                grdData.DataSource = new string[] { };
                grdData.DataBind();
            }
        }
    }


    protected void chkSelectAll_CheckedChanged(object sender, EventArgs e)
    {
        System.Web.UI.WebControls.CheckBox chkAll = (System.Web.UI.WebControls.CheckBox)grdData.HeaderRow.FindControl("chkSelectAll");

        foreach (GridViewRow row in grdData.Rows)
        {
            System.Web.UI.WebControls.CheckBox chkRow = (System.Web.UI.WebControls.CheckBox)row.FindControl("chkSelect");
            chkRow.Checked = chkAll.Checked;
            
        }
    }
    void LoadParts()
    {
        using (Database db = new Database("connString"))
        {
            string sql = "select distinct d.part_slno ,p.mstpartNo  from dcr d inner join parts p on p.part_slno=d.part_slno  where p.del_status='N'";
            List<Class_parts> lst = db.Query<Class_parts>(sql).ToList();



            for (int cnt = 0; cnt < lst.Count; cnt++)
            {
                ddlpart_slno.Items.Add(new ListItem(lst[cnt].mstPartNo, Convert.ToString(lst[cnt].part_slno)));
            }
            //ddlpart_slno.Items.Insert(0, "Select...");
        }
    }


}